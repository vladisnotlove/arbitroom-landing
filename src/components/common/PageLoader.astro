---
import classNames from "classNames";
import LogoIcon from "@components/common/LogoIcon.astro";

export interface Props {
    className?: string;
}

const { className } = Astro.props;
---

<div class={classNames(className, "page-loader")} id="pageLoader">
    <svg
        class="page-loader__spinner"
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        stroke="#000"
        viewBox="0 0 24 24"
    >
        <g class="page-loader__circle-wrapper">
            <circle
                cx="50%"
                cy="50%"
                r="10"
                fill="none"
                stroke-width="2"
                stroke="url(#paint0_radial_108_307)"></circle>
        </g>
        <defs>
            <radialGradient
                xmlns="http://www.w3.org/2000/svg"
                id="paint0_radial_108_307"
                cx="0"
                cy="0"
                r="1"
                gradientUnits="userSpaceOnUse"
                gradientTransform="translate(-6.5 -23.5) rotate(59.1279) scale(53.5934 50.1283)"
            >
                <stop stop-color="#20FFFA"></stop>
                <stop offset="0.716998" stop-color="#FF20FF"></stop>
                <stop offset="1" stop-color="#FF741A"></stop>
            </radialGradient>
        </defs>
    </svg>
</div>

<style is:inline>
    .page-loader {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: var(--color-background-upper1);

        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        align-items: center;
        justify-content: center;
        z-index: var(--z-index-page-loader);
        opacity: 1;
        transition: opacity 0.25s 0.25s, top 0s 0.5s;
    }
    .page-loader__spinner {
        width: 2.5rem;
        height: 2.5rem;
        transition: all 0.25s;
    }

    .page-loader__circle-wrapper {
        transform-origin: center;
        animation: spinner_zKoa 2s linear infinite;
    }

    .page-loader__circle-wrapper > circle {
        stroke-linecap: round;
        animation: spinner_YpZS 1.5s ease-in-out infinite;
    }

    /* hidden state */

    .page-loader.hidden {
        top: -200%;
        opacity: 0;
    }

    .page-loader.hidden > .page-loader__spinner {
        opacity: 0;
        transform: scale(0.8) rotate(90deg);
    }

    @keyframes spinner_zKoa {
        100% {
            transform: rotate(360deg);
        }
    }
    @keyframes spinner_YpZS {
        0% {
            stroke-dasharray: 0 150;
            stroke-dashoffset: 0;
        }
        47.5% {
            stroke-dasharray: 42 150;
            stroke-dashoffset: -16;
        }
        95%,
        100% {
            stroke-dasharray: 42 150;
            stroke-dashoffset: -59;
        }
    }
</style>

<script is:inline>
    (() => {
        const MIN_LOADER_TIME = 0;

        const pageLoader = document.getElementById("pageLoader");
        const timeBefore = performance.now();

        window.addEventListener("load", () => {
            const timeAfter = performance.now();

            const loadTime = timeAfter - timeBefore;
            if (loadTime > MIN_LOADER_TIME) {
                pageLoader.classList.add("hidden");
            } else {
                setTimeout(() => {
                    pageLoader.classList.add("hidden");
                }, MIN_LOADER_TIME - loadTime);
            }
        });
    })();
</script>
