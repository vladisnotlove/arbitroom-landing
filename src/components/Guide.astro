---
import classNames from "classNames";
import routes from "@store/routes";
import { t } from "@utils/i18next";
import Button from "@components/uiKit/Button.astro";
import Connector from "@components/uiKit/Connector.astro";
import Container from "@components/uiKit/Container.astro";
import Paper from "@components/uiKit/Paper.astro";
import Section from "@components/uiKit/Section.astro";
import Text from "@components/uiKit/Text.astro";
import WithAOS from "@components/utils/WithAOS.astro";
import calculateCellDelay from "@utils/aos/calculateCellDelay";
import variables from "@styles/variables";

export interface Props {
    className?: string;
}

const { className } = Astro.props;

const steps = [
    {
        imgSrc: "/_layout-assets/images/guide-steps/sign-up.svg",
        description: t("@landing.@guide.signUp"),
    },
    {
        imgSrc: "/_layout-assets/images/guide-steps/replenish.svg",
        description: t("@landing.@guide.replenish"),
    },
    {
        imgSrc: "/_layout-assets/images/guide-steps/deposit-funds.svg",
        description: t("@landing.@guide.depositFunds"),
    },
    {
        imgSrc: "/_layout-assets/images/guide-steps/get-percents.svg",
        description: t("@landing.@guide.getPercents"),
    },
    {
        imgSrc: "/_layout-assets/images/guide-steps/withdraw-funds.svg",
        description: t("@landing.@guide.withdrawFunds"),
    },
];
---

<Container
    className={classNames(className)}
    id={routes.index.fragments.whatFirst}
>
    <Section className={"guide"}>
        <WithAOS animation={"fade-right"}>
            <Text className="guide__title" variant="h2">
                {t("@landing.@guide.title")}
            </Text>
        </WithAOS>
        <Connector
            className={"guide__steps"}
            classes={{ line: "guide__line" }}
            lineOptions={{ radius: 24 }}
        >
            {
                steps.map((data, index) => (
                    <WithAOS
                        animation={"fade-up"}
                        delay={calculateCellDelay(index, 3)}
                        adaptive={[
                            {
                                maxWidth: variables.tablet,
                                attrs: {
                                    animation: "fade-up",
                                    delay: calculateCellDelay(index, 2, {
                                        columnsDeltaTime: 100,
                                        rowsDeltaTime: 50,
                                    }),
                                },
                            },
                            {
                                maxWidth: variables.smallTablet,
                                attrs: {
                                    animation: "fade-right",
                                    delay: 200,
                                },
                            },
                        ]}
                    >
                        <div>
                            <Paper className={"guide__step"}>
                                <div
                                    class="guide__step-image-wrapper"
                                    style={`animation-delay: -${index * 0.5}s`}
                                >
                                    <img src={data.imgSrc} />
                                </div>
                                <Text
                                    className="guide__step-number"
                                    variant={"body1"}
                                    color="text-secondary"
                                >
                                    {t("@common.step") + " " + (index + 1)}
                                </Text>
                                <Text
                                    className="guide__step-description"
                                    variant={"h5"}
                                >
                                    <span>{data.description}</span>
                                    <span>{data.description}</span>
                                </Text>
                            </Paper>
                        </div>
                    </WithAOS>
                ))
            }
            <WithAOS
                animation={"fade-up"}
                delay={calculateCellDelay(steps.length, 3)}
                adaptive={[
                    {
                        maxWidth: variables.tablet,
                        attrs: {
                            animation: "fade-up",
                            delay: calculateCellDelay(steps.length, 2, {
                                columnsDeltaTime: 50,
                                rowsDeltaTime: 100,
                            }),
                        },
                    },
                    {
                        maxWidth: variables.smallTablet,
                        attrs: {
                            animation: "fade-right",
                            delay: 200,
                        },
                    },
                ]}
            >
                <Paper className={"guide__step with-action"}>
                    <Button>
                        {t("@common.proceed")}
                    </Button>
                </Paper>
            </WithAOS>
        </Connector>
    </Section>
</Container>

<style lang="scss">
    @import "../styles/mixins";
    .guide__title {
        margin-bottom: 4rem;
    }
    .guide__steps {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        gap: 3.5rem;
    }
    .guide__step {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
        padding: 1.5rem 2rem;
        overflow: hidden;

        &.with-action {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        &:hover {
            cursor: pointer;
            .guide__step-number {
                color: $color-text-prime;
            }

            .guide__step-description {
                & > span:nth-child(1) {
                    background-size: 0 100%;
                }

                & > span:nth-child(2) {
                    background-size: 100% 100%;
                }
            }
        }
    }

    @keyframes fly {
        0% {
            transform: translateY(0px);
        }
        50% {
            transform: translateY(-6px);
        }
        100% {
            transform: translateY(0px);
        }
    }

    .guide__step-image-wrapper {
        position: relative;
        width: 80%;
        aspect-ratio: 2.21;
        animation: fly 2.5s ease-in-out infinite;

        & > img {
            position: absolute;
            top: 50%;
            left: 50%;
            width: 150%;
            height: 200%;
            transform: translate(-50%, -50%);
        }
    }

    .guide__step-number {
        position: relative;
        transition: all $animation-fast;
        padding: 0 0.75rem;
    }

    .guide__step-description {
        position: relative;
        text-align: center;

        & > span:first-child {
            background-image: linear-gradient(
                to right,
                $color-text-prime 0%,
                $color-text-prime 100%
            );
            background-repeat: no-repeat;
            background-position: right;
            background-size: 100% 100%;
            @include background-clip-text;
            transition: all 0.6s;
        }

        & > span:nth-child(2) {
            position: absolute;
            top: 0;
            left: 0;
            @include gradient-primary-for-text;
            background-repeat: no-repeat;
            background-size: 0 100%;
            transition: all 0.6s;
        }
    }

    svg.guide__line {
        stroke: white;
        stroke-opacity: 0.24;
        stroke-width: 1;
        stroke-dasharray: 8 8;
        transition: all $animation-slow;

        &.active {
            stroke: #fff;
            stroke-opacity: 1;
            stroke-dasharray: 8 10;
            stroke-dashoffset: -64px;
        }
    }

    @media (max-width: $small-desktop) {
        .guide__title {
            margin-bottom: 3.5rem;
        }
    }

    @media (max-width: $laptop) {
        .guide__title {
            margin-bottom: 3rem;
        }
    }

    @media (max-width: $small-laptop) {
        .guide__title {
            margin-bottom: 2.5rem;
        }
    }

    @media (max-width: $tablet) {
        .guide__title {
            margin-bottom: 2rem;
        }

        .guide__steps {
            grid-template-columns: 1fr 1fr;
            gap: 2.5rem;
        }
    }

    @media (max-width: $small-tablet) {
        .guide__title {
            margin-bottom: 1.5rem;
        }

        .guide__steps {
            grid-template-columns: 1fr;
            gap: 2rem;
        }

        .guide__step.with-action {
            @include disable-paper;
            display: flex;
            flex-direction: row;

            & > * {
                flex-grow: 1;
            }
        }

        .guide__step-image-wrapper {
            width: 50%;
            min-width: 240px;
        }

        .guide__step-description {
            font-size: 1.25rem !important;
        }
    }

    @media (max-width: $mobile) {
        .guide__steps {
            gap: 1.5rem;
        }

        .guide__step-image-wrapper {
            width: 100%;
        }
    }
</style>
