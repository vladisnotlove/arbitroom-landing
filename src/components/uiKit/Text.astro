---
import classNames from "classNames";

export interface Props {
    className?: string;
    as?: keyof HTMLElementTagNameMap;
    attrs?: Record<string, string>;
    variant?:
        | "h2"
        | "h3"
        | "h3-adaptive"
        | "h4"
        | "h5"
        | "body1"
        | "body2"
        | "caption";
    color?:
        | "text-primary"
        | "text-secondary"
        | "secondary-gradient"
        | "inherit";
    disableMobileAdaptive?: boolean;
    disableAdaptive?: boolean;
}

const {
    className,
    as: Tag = "div",
    attrs,
    variant,
    color,
    disableMobileAdaptive,
    disableAdaptive,
} = Astro.props;
---

<Tag
    class={classNames(className, "text", variant, {
        ["color-text-secondary"]: color === "text-secondary",
        ["color-secondary-gradient"]: color === "secondary-gradient",
        ["color-inherit"]: color === "inherit",
        ["disable-mobile-adaptive"]: disableMobileAdaptive,
        ["disable-adaptive"]: disableAdaptive,
    })}
    {...attrs}
>
    <slot />
</Tag>

<style lang="scss" is:global>
    @import "../../styles/variables.scss";

    .text {
        color: $color-text-prime;

        &.h2 {
            @include typography-h2;
        }
        &.h3 {
            @include typography-h3;
        }

        &.h4 {
            @include typography-h4;
        }
        &.h5 {
            @include typography-h5;
        }
        &.body1 {
            @include typography-body1;
        }
        &.body2 {
            @include typography-body2;
        }
        &.caption {
            @include typography-caption;
        }

        // color variants

        &.color-text-secondary {
            color: $color-text-secondary;
        }

        &.color-secondary-gradient {
            @include gradient-primary-for-text;
        }

        &.color-inherit {
            color: inherit;
        }
    }

    @media (max-width: $small-desktop) {
        .text {
            &.h2 {
                font-size: 4.375rem;
            }

            &.h3 {
                font-size: 3rem;
            }

            &.h4 {
                font-size: 2.125rem;
            }

            &.h5 {
                font-size: 1.375rem;
            }
        }
    }
    @media (max-width: $laptop) {
        .text {
            &.h2 {
                font-size: 3.875rem;
            }

            &.h3 {
                font-size: 2.75rem;
            }
            &.h4 {
                font-size: 2rem;
            }
            &.h5 {
                font-size: 1.25rem;
            }

            &.body1 {
                font-size: 1.125rem;
            }
        }
    }

    @media (max-width: $small-laptop) {
        .text {
            &.h2 {
                font-size: 3.25rem;
            }

            &.h3 {
                font-size: 2.5rem;
            }
            &.h4 {
                font-size: 1.875rem;
            }
            &.h5 {
                font-size: 1.125rem;
            }

            &.body1 {
                font-size: 1rem;
                line-height: 1.5;
            }
        }
    }

    @media (max-width: $tablet) {
        .text {
            &.h2 {
                font-size: 2.5rem;
            }

            &.h3 {
                font-size: 2rem;
            }
            &.h4 {
                font-size: 1.625rem;
            }
            &.h5 {
                font-size: 1rem;
                font-weight: 400;
            }

            &.body2 {
                font-size: 0.875rem;
            }
        }
    }

    @media (max-width: $small-tablet) {
        .text {
            &.h2 {
                font-size: 2rem;
            }
            &.h3 {
                font-size: 1.75rem;
                font-weight: 400;
            }
            &.h4 {
                font-size: 1.5rem;
            }
        }
    }
</style>
