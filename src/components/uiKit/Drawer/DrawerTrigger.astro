---
import classNames from "classNames";

export interface Props {
    as?: keyof HTMLElementTagNameMap;
    className?: string;
    drawerId: string;
    attrs?: Record<string, string | undefined>;
}

const { as: As = "div", className, drawerId, attrs } = Astro.props;
---

<As
    class={classNames(className, "drawer-trigger")}
    data-drawer-id={drawerId}
    {...attrs}
>
    <slot />
</As>

<style lang="scss" is:global>
    html.drawer-open {
        overflow: hidden;
    }

    // padding instead of scrollbar (only for desktop)
    @media (hover: hover) {
        html.drawer-open {
            padding-right: 8px;
        }
    }
</style>

<script>
    import toggleDrawer from "./toggleDrawer";

    window.addEventListener("load", () => {
        const triggers = document.querySelectorAll(".drawer-trigger");

        triggers.forEach((trigger) => {
            trigger.addEventListener("click", () => {
                const drawerId = trigger.getAttribute("data-drawer-id");
                const drawer = drawerId
                    ? document.getElementById(drawerId)
                    : null;

                if (drawer) toggleDrawer(drawer);
            });
        });
    });
</script>
