---
import classNames from "classNames";
import { t } from "@utils/i18next";
import CollapseCard from "@components/CollapseCard.astro";
import Container from "@components/uiKit/Container.astro";
import Section from "@components/uiKit/Section.astro";
import Text from "@components/uiKit/Text.astro";
import WithAOS from "@components/utils/WithAOS.astro";
import variables from "@styles/variables";

export interface Props {
    className?: string;
}

const { className } = Astro.props;
const questions = [
    {
        question: "Что такое Arbitroom?",
        answer: "Arbitroom.io - это это автоматизированная площадка арбитража криптовалют.",
    },
    {
        question: "Какие виды арбитража использует Arbitroom?",
        answer: "В большинстве случаев Arbitroom использует межбиржевой и внутребиржевой арбитраж.",
    },
    {
        question: "Когда вы начали работать?",
        answer: "Платформа работает с 2021 года",
    },
    {
        question: "Что нужно для начала работы?",
        answer: "Для начала работы вам необходимо ознакомиться с условиями и принять правила пользования сайтом, после чего пройти регистрацию на платформе.",
    },
    {
        question: "Что нужно для регистрации?",
        answer: "Для регистрации вам потребуется рабочая почта и надежный пароль.",
    },
    {
        question: "Насколько безопасно инвестировать на платформе Arbitroom?",
        answer: "Инвестирование, особенно в криптовалютную тематику, всегда связано с большими рисками, наша команда минимизирует риски за счет быстрых сделок в арбитражных ситуациях. Оборотная ликвидность всегда под контролем и не задерживается на биржах дольше, чем этого требует конкретная сделка.",
    },
    {
        question: "Какие риски потери средств?",
        answer: "Вы рискуете потерять средства только в том случае, если криптовалюта перестанет существовать или ее нельзя будет обналичивать.",
    },
];
---

<Container className={classNames(className)}>
    <Section className={"faq"}>
        <WithAOS animation={"fade-right"}>
            <Text className={"faq__title"} variant={"h2"}>
                {t("@landing.@faq.title")}
            </Text>
        </WithAOS>
        <div class="faq__cards">
            {
                questions.map(({ question, answer }, index) => (
                    <WithAOS
                        animation={"fade-right"}
                        delay={index * 50 + 200}
                        adaptive={[
                            {
                                maxWidth: variables.tablet,
                                attrs: {
                                    animation: "fade-right",
                                    delay: 200,
                                },
                            },
                        ]}
                    >
                        <CollapseCard title={question}>{answer}</CollapseCard>
                    </WithAOS>
                ))
            }
        </div>
    </Section>
</Container>

<style lang="scss">
    @import "../styles/variables";

    .faq {
        display: flex;
        gap: 3rem;
    }
    .faq__title {
        min-width: 0;
        flex-basis: 0;
        flex-grow: 1;
    }
    .faq__cards {
        min-width: 0;
        flex-basis: 0;
        flex-grow: 1;

        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    @media (max-width: $tablet) {
        .faq {
            flex-direction: column;
            align-items: flex-start;
            gap: 2rem;
        }

        .faq__title {
            text-align: left;
        }
    }
    @media (max-width: $small-tablet) {
        .faq {
            gap: 1.5rem;
        }
    }
    @media (max-width: $mobile) {
        .faq__cards {
            gap: 0.75rem;
        }
    }
</style>
